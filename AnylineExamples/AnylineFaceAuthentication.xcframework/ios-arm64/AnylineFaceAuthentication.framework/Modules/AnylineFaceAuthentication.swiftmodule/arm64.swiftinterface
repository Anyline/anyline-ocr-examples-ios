// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AnylineFaceAuthentication
import Anyline
@_exported import AnylineFaceAuthentication
import FaceTecSDK
import Foundation
import Swift
import UIKit
@objc public protocol FaceAuthenticationDelegate {
  @objc func onFaceAuthenticationCompleted(faceAuthenticationController: AnylineFaceAuthentication.FaceAuthenticationPluginController, livenessResult: FaceTecSDK.FaceTecSessionResult, scanResult: Anyline.ALIDResult<Swift.AnyObject>, match: Swift.Bool, matchLevel: Swift.Int)
  @objc func onError(faceAuthenticationController: AnylineFaceAuthentication.FaceAuthenticationPluginController, error: Foundation.NSError)
}
@_hasMissingDesignatedInitializers @objc public class FaceAuthenticationPluginController : UIKit.UIViewController, Anyline.ALIDPluginDelegate, FaceTecSDK.FaceTecFaceScanProcessorDelegate, Anyline.ALInfoDelegate, UIKit.UIViewControllerTransitioningDelegate {
  @objc public func setAnylineIDConfigPath(anylineIDConfigPath: Swift.String)
  @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @objc public func startLiveness()
  @objc public func processSessionWhileFaceTecSDKWaits(sessionResult: FaceTecSDK.FaceTecSessionResult, faceScanResultCallback: FaceTecSDK.FaceTecFaceScanResultCallback)
  @objc public func onFaceTecSDKCompletelyDone()
  @objc public func anylineIDScanPlugin(_ anylineIDScanPlugin: Anyline.ALIDScanPlugin, didFind scanResult: Anyline.ALIDResult<Swift.AnyObject>)
  @objc public func animationController(forDismissed dismissed: UIKit.UIViewController) -> UIKit.UIViewControllerAnimatedTransitioning?
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class AnylineFaceAuthenticationSDK : ObjectiveC.NSObject {
  @objc public static let sdk: AnylineFaceAuthentication.AnylineFaceAuthenticationSDK
  @objc public func retrieveConfigurationWizardCustomization() -> FaceTecSDK.FaceTecCustomization
  @objc public func setupDevelopmentMode(anylineLicenseKey: Swift.String, completion: @escaping (Swift.Bool) -> ()) throws
  @objc public func setupProductionMode(anylineLicenseKey: Swift.String, encryptionKey: Swift.String, facetecLicenseString: Swift.String, endpointUrl: Swift.String, completion: @escaping (Swift.Bool) -> ()) throws
  @objc public func setupProductionMode(anylineLicenseKey: Swift.String, encryptionKey: Swift.String, endpointUrl: Swift.String, completion: @escaping (Swift.Bool) -> ()) throws
  @objc public func createViewController(delegate: AnylineFaceAuthentication.FaceAuthenticationDelegate) -> AnylineFaceAuthentication.FaceAuthenticationPluginController?
  @objc public func createViewController(delegate: AnylineFaceAuthentication.FaceAuthenticationDelegate, facetecConfig: FaceTecSDK.FaceTecCustomization, anylineIDConfigPath: Swift.String) -> AnylineFaceAuthentication.FaceAuthenticationPluginController?
  @objc deinit
}
