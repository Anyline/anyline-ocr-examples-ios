<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/ALCoreController.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/ALCoreController</TokenIdentifier>
			<Abstract type="html">The Anyline Controller is the small but powerful interface to our image
processing / text recognition. Loaded with different Configurations files it
can execute totally different tasks.</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
            
			
			<NodeRef refid="11"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/setAsyncSDK:</TokenIdentifier>
			<Abstract type="html">With this boolean you can control if the SDK runs on an async queue
or if you want to run it on your current thread.</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL asyncSDK</Declaration>
			
			
			<Anchor>//api/name/asyncSDK</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/asyncSDK</TokenIdentifier>
			<Abstract type="html">With this boolean you can control if the SDK runs on an async queue
or if you want to run it on your current thread.</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL asyncSDK</Declaration>
			
			
			<Anchor>//api/name/asyncSDK</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ALCoreController/asyncSDK</TokenIdentifier>
			<Abstract type="html">With this boolean you can control if the SDK runs on an async queue
or if you want to run it on your current thread.</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) BOOL asyncSDK</Declaration>
			
			
			<Anchor>//api/name/asyncSDK</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/setRunning:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, getter=isRunning) BOOL running</Declaration>
			
			
			<Anchor>//api/name/running</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/isRunning</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, getter=isRunning) BOOL running</Declaration>
			
			
			<Anchor>//api/name/running</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ALCoreController/running</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, getter=isRunning) BOOL running</Declaration>
			
			
			<Anchor>//api/name/running</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/setDelegate:</TokenIdentifier>
			<Abstract type="html">The delegate property.
You must set the delegate if you want to get any results out
of the Anyline SDK.</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;ALCoreControllerDelegate&gt; _Nullable delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/delegate</TokenIdentifier>
			<Abstract type="html">The delegate property.
You must set the delegate if you want to get any results out
of the Anyline SDK.</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;ALCoreControllerDelegate&gt; _Nullable delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ALCoreController/delegate</TokenIdentifier>
			<Abstract type="html">The delegate property.
You must set the delegate if you want to get any results out
of the Anyline SDK.</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;ALCoreControllerDelegate&gt; _Nullable delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/initWithLicenseKey:</TokenIdentifier>
			<Abstract type="html">Initializes a new AnylineController with a license key. In order to
correctly run Anyline you will have to set the AnylineController delegate
and load an appropriate configuration.</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>- (instancetype _Nullable)initWithLicenseKey:(NSString *_Nonnull)licenseKey</Declaration>
			<Parameters>
				<Parameter>
					<Name>licenseKey</Name>
					<Abstract type="html">The license key you purchased for Anyline.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new instance of AnylineController.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithLicenseKey:</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/initWithLicenseKey:delegate:</TokenIdentifier>
			<Abstract type="html">Initializes a new AnylineController with a license key and delegate. In order
to correctly run Anyline you will have to load an appropriate configuration.</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>- (instancetype _Nullable)initWithLicenseKey:(NSString *_Nonnull)licenseKey delegate:(id&lt;ALCoreControllerDelegate&gt; _Nullable)delegate</Declaration>
			<Parameters>
				<Parameter>
					<Name>licenseKey</Name>
					<Abstract type="html">The license key you purchased for Anyline.</Abstract>
				</Parameter><Parameter>
					<Name>delegate</Name>
					<Abstract type="html">The delegate where for the Anyline callbacks.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new instance of AnylineController.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithLicenseKey:delegate:</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/loadScript:bundlePath:finished:</TokenIdentifier>
			<Abstract type="html">This method loads the Anyline SDK with an configuration string.</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>- (void)loadScript:(NSString *_Nonnull)script bundlePath:(NSString *_Nonnull)bundlePath finished:(void ( ^ _Nonnull ) ( BOOL success , NSError *_Nullable error ))finished</Declaration>
			<Parameters>
				<Parameter>
					<Name>script</Name>
					<Abstract type="html">The string which represents the configuration.</Abstract>
				</Parameter><Parameter>
					<Name>bundlePath</Name>
					<Abstract type="html">The bundlePath where the additional ressources are located.</Abstract>
				</Parameter><Parameter>
					<Name>finished</Name>
					<Abstract type="html">Inidicating if setup is finished with an error object when setup failed.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/loadScript:bundlePath:finished:</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/loadScript:scriptName:bundlePath:finished:</TokenIdentifier>
			<Abstract type="html">This method loads the Anyline SDK with an configuration string.</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>- (void)loadScript:(NSString *_Nonnull)script scriptName:(NSString *_Nonnull)scriptName bundlePath:(NSString *_Nonnull)bundlePath finished:(void ( ^ _Nonnull ) ( BOOL success , NSError *_Nullable error ))finished</Declaration>
			<Parameters>
				<Parameter>
					<Name>script</Name>
					<Abstract type="html">The string which represents the configuration.</Abstract>
				</Parameter><Parameter>
					<Name>scriptName</Name>
					<Abstract type="html">The filename of the script.</Abstract>
				</Parameter><Parameter>
					<Name>bundlePath</Name>
					<Abstract type="html">The bundlePath where the additional ressources are located.</Abstract>
				</Parameter><Parameter>
					<Name>finished</Name>
					<Abstract type="html">Inidicating if setup is finished with an error object when setup failed.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/loadScript:scriptName:bundlePath:finished:</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/loadCmdFile:bundlePath:finished:</TokenIdentifier>
			<Abstract type="html">This method loads the Anyline SDK with an configuration file which is located
at the bundlePath. The configuration must ether be an .alc unencrypted file
or an .ale encrypted file.</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>- (void)loadCmdFile:(NSString *_Nonnull)cmdFileName bundlePath:(NSString *_Nonnull)bundlePath finished:(void ( ^ _Nonnull ) ( BOOL success , NSError *_Nullable error ))finished</Declaration>
			<Parameters>
				<Parameter>
					<Name>cmdFileName</Name>
					<Abstract type="html">Configuration filename. Ether .alc or .ale. Located at
the bundlePath</Abstract>
				</Parameter><Parameter>
					<Name>bundlePath</Name>
					<Abstract type="html">The bundlePath where the configuration and the additional
ressources are located.</Abstract>
				</Parameter><Parameter>
					<Name>finished</Name>
					<Abstract type="html">Inidicating if setup is finished with an error object when setup failed.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/loadCmdFile:bundlePath:finished:</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/startWithImageProvider:error:</TokenIdentifier>
			<Abstract type="html">Starts a continious image processing workflow where the images are provided from the
image provider interface. Should for example be called in the viewDidAppear:</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>- (BOOL)startWithImageProvider:(id&lt;ALImageProvider&gt; _Nonnull)imageProvider error:(NSError *_Nullable *_Nullable)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>imageProvider</Name>
					<Abstract type="html">The image provider which is responsible for providing the frames for the
computation.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">The error if the processing can not be started.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Boolean indicating the success / failure of the start process.</Abstract></ReturnValue>
			<Anchor>//api/name/startWithImageProvider:error:</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/startWithImageProvider:startVariables:error:</TokenIdentifier>
			<Abstract type="html">Starts a continious image processing workflow where the images are provided from the
image provider interface. Should for example be called in the viewDidAppear:</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>- (BOOL)startWithImageProvider:(id&lt;ALImageProvider&gt; _Nonnull)imageProvider startVariables:(NSDictionary *_Nullable)variables error:(NSError *_Nullable *_Nullable)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>imageProvider</Name>
					<Abstract type="html">The image provider which is responsible for providing the frames for the
computation.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">The error if the processing can not be started.</Abstract>
				</Parameter><Parameter>
					<Name>startVariables</Name>
					<Abstract type="html">Variables which will be added to the process and can be referenced in the
Anyline Command File.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Boolean indicating the success / failure of the start process.</Abstract></ReturnValue>
			<Anchor>//api/name/startWithImageProvider:startVariables:error:</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/stopAndReturnError:</TokenIdentifier>
			<Abstract type="html">Stops a previously started image processing workflow. Should be called ex. in viewDidDisappear:
or viewWillDisappear:</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>- (BOOL)stopAndReturnError:(NSError *_Nullable *_Nullable)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>error</Name>
					<Abstract type="html">The error if processing workflow could not be stopped</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Boolean indicating the success / failure of the stop.</Abstract></ReturnValue>
			<Anchor>//api/name/stopAndReturnError:</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/processImage:error:</TokenIdentifier>
			<Abstract type="html">Starts a single image run with an UIImage.</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>- (BOOL)processImage:(UIImage *_Nonnull)image error:(NSError *_Nullable *_Nullable)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>image</Name>
					<Abstract type="html">The image or video frame which should be processed. This image is referenced as $image
in the .alc configuation file.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">If an error occured while trying to start processing, it is passed here.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">BOOL indicating if the processing could be started.</Abstract></ReturnValue>
			<Anchor>//api/name/processImage:error:</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/processImage:startVariables:error:</TokenIdentifier>
			<Abstract type="html">Starts a single image run with an UIImage and a start variable dictionary.</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>- (BOOL)processImage:(UIImage *_Nonnull)image startVariables:(NSDictionary *_Nullable)variables error:(NSError *_Nullable *_Nullable)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>image</Name>
					<Abstract type="html">The image or video frame which should be processed. This image is referenced as $image
in the .alc configuation file.</Abstract>
				</Parameter><Parameter>
					<Name>variables</Name>
					<Abstract type="html">Variables which will be added for this single process. They can be used and
controlled in the .alc files. @see ALConfig for global config variables.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">If an error occured while trying to start processing, it is passed here.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">BOOL indicating if the processing could be started.</Abstract></ReturnValue>
			<Anchor>//api/name/processImage:startVariables:error:</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/processALImage:error:</TokenIdentifier>
			<Abstract type="html">Starts a single image run with an ALImage.</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>- (BOOL)processALImage:(ALImage *_Nonnull)alImage error:(NSError *_Nullable *_Nullable)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>alImage</Name>
					<Abstract type="html">The image or video frame which should be processed. This image is referenced as $image
in the .alc configuation file.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">If an error occured while trying to start processing, it is passed here.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">BOOL indicating if the processing could be started.</Abstract></ReturnValue>
			<Anchor>//api/name/processALImage:error:</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/processALImage:startVariables:error:</TokenIdentifier>
			<Abstract type="html">Starts a single image run with an ALImage and a start variable dictionary.</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>- (BOOL)processALImage:(ALImage *_Nonnull)alImage startVariables:(NSDictionary *_Nullable)variables error:(NSError *_Nullable *_Nullable)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>alImage</Name>
					<Abstract type="html">The image or video frame which should be processed. This image is referenced as $image
in the .alc configuation file.</Abstract>
				</Parameter><Parameter>
					<Name>variables</Name>
					<Abstract type="html">Variables which will be added for this single process. They can be used and
controlled in the .alc files. @see ALConfig for global config variables.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">If an error occured while trying to start processing, it is passed here.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">BOOL indicating if the processing could be started.</Abstract></ReturnValue>
			<Anchor>//api/name/processALImage:startVariables:error:</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/setParameter:forKey:</TokenIdentifier>
			<Abstract type="html">Sets a parameter with a key in the Interpreter.</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>- (void)setParameter:(id _Nonnull)parameter forKey:(NSString *_Nonnull)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>parameter</Name>
					<Abstract type="html">Parameter to set.</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">The key for the parameter.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setParameter:forKey:</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ALCoreController/versionNumber</TokenIdentifier>
			<Abstract type="html">The Version number of the current Anyline framework.</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>+ (NSString *_Nonnull)versionNumber</Declaration>
			
			<ReturnValue><Abstract type="html">The Version number as String</Abstract></ReturnValue>
			<Anchor>//api/name/versionNumber</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ALCoreController/buildNumber</TokenIdentifier>
			<Abstract type="html">The Build number of the current Anyline framework.</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>+ (NSString *_Nonnull)buildNumber</Declaration>
			
			<ReturnValue><Abstract type="html">The Build number as String</Abstract></ReturnValue>
			<Anchor>//api/name/buildNumber</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ALCoreController/frameworkBundle</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>+ (NSBundle *_Nonnull)frameworkBundle</Declaration>
			
			
			<Anchor>//api/name/frameworkBundle</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/enableReporting:</TokenIdentifier>
			<Abstract type="html">Reporting ON Switch, off by default</Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>- (void)enableReporting:(BOOL)enable</Declaration>
			<Parameters>
				<Parameter>
					<Name>enable</Name>
					<Abstract type="html">if YES, anyline will report for QA failed scan tries. Use reportImageForLog in ALC file,
and use the reportScanResultState: for reporting</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/enableReporting:</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/reportIncludeValues:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>- (void)reportIncludeValues:(NSString *_Nonnull)values</Declaration>
			
			
			<Anchor>//api/name/reportIncludeValues:</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ALCoreController/runStatistics</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>ALCoreController.h</DeclaredIn>
			
			<Declaration>- (NSArray *_Nonnull)runStatistics</Declaration>
			
			
			<Anchor>//api/name/runStatistics</Anchor>
            <NodeRef refid="11"/>
		</Token>
		
        
        
	</File>
</Tokens>