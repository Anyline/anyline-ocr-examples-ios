'use strict';function setupCutout(config){var cutoutDiv=document.getElementById('cutout');var backgroundDiv=document.getElementById('background');var canvas=document.getElementById('myCanvas');var cornerRadius=config.cornerRadius,strokeWidth=config.strokeWidth,strokeColor=config.strokeColor,outerAlpha=config.outerAlpha,maxWidthPercent=config.maxWidthPercent,maxHeightPercent=config.maxHeightPercent,offset=config.offset,rect=config.rect;// size
cutoutDiv.style.width=rect.right-rect.left+'px';cutoutDiv.style.height=rect.bottom-rect.top+'px';// alignment
cutoutDiv.style.top=rect.top+'px';cutoutDiv.style.marginLeft=rect.left+'px';cutoutDiv.style.borderRadius=cornerRadius?cornerRadius*2+'px':'16px';cutoutDiv.style.borderWidth=strokeWidth?strokeWidth+'px':'2px';cutoutDiv.style.borderStyle='solid';//cutoutDiv.style.maxWidth = maxWidthPercent ? maxWidthPercent : '100%';
//cutoutDiv.style.maxHeight = maxHeightPercent ? maxHeightPercent : '100%';
// borderColor
cutoutDiv.style.borderColor=getColorFromHexString(strokeColor);// background
cutoutDiv.style.boxShadow='0px 0px 0px 995px '+getColorFromHexString(outerAlpha);// cutoutDiv.style.boxShadow = '0px 0px 0px 9995px rgba(128, 128, 128, 1)';
var _cutoutDiv$getBoundin=cutoutDiv.getBoundingClientRect(),left=_cutoutDiv$getBoundin.left,right=_cutoutDiv$getBoundin.right,top=_cutoutDiv$getBoundin.top,bottom=_cutoutDiv$getBoundin.bottom}function setCutoutBorders(feedbackColor){var cutoutDiv=document.getElementById('cutout');cutoutDiv.style.borderColor=getColorFromHexString(feedbackColor)}
'use strict';var getColorFromHexString=function getColorFromHexString(colorString){colorString=colorString.replace('#','');if(colorString&&colorString.length===6){var red=parseInt(colorString.substring(0,2),16);var green=parseInt(colorString.substring(2,4),16);var blue=parseInt(colorString.substring(4,6),16);return'rgb('+red+', '+green+', '+blue+')'}else if(colorString&&colorString.length===8){var alpha=parseInt(colorString.substring(0,2),16);var _red=parseInt(colorString.substring(2,4),16);var _green=parseInt(colorString.substring(4,6),16);var _blue=parseInt(colorString.substring(6,8),16);return'rgba('+_red+', '+_green+', '+_blue+', '+alpha/100+')'}return'rgba(255, 255, 255, 0)'};
"use strict";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}var ALColor=function(){function ALColor(hex){_classCallCheck(this,ALColor);this.initColor=hex;this.color=getColorFromHexString(hex)}_createClass(ALColor,[{key:"getColor",value:function getColor(){return this.color}}]);return ALColor}();var ALSquareInput=function ALSquareInput(squares,textRect,points){_classCallCheck(this,ALSquareInput);this.squares=squares;this.textRect=textRect;this.points=points};var ALModifier=function ALModifier(){_classCallCheck(this,ALModifier);this.alphaModifier=[];this.sizeModifierX=[];this.sizeModifierY=[];this.index=0;this.dir=1};var ALDrawnElement=function(){function ALDrawnElement(x,y,width,height,strokeColor,fillColor){_classCallCheck(this,ALDrawnElement);this.opacity=1;this.xi=x;this.yi=y;this.wi=width;this.hi=height;this.scalex=1;this.scaley=1;this.strokeColor=new ALColor(strokeColor);this.fillColor=new ALColor(fillColor)}_createClass(ALDrawnElement,[{key:"w",value:function w(){return this.wi*this.scalex}},{key:"x",value:function x(){return this.xi+(this.wi-this.w())}},{key:"y",value:function y(){return this.yi+(this.hi-this.h())}},{key:"h",value:function h(){return this.hi*this.scaley}}]);return ALDrawnElement}();var ALDrawnPoint=function(){function ALDrawnPoint(x,y,strokeColor,fillColor){_classCallCheck(this,ALDrawnPoint);this.opacity=1;this.xi=x;this.yi=y;this.scalex=1;this.scaley=1;this.strokeColor=new ALColor(strokeColor);this.fillColor=new ALColor(fillColor)}_createClass(ALDrawnPoint,[{key:"x",value:function x(){return this.xi}},{key:"y",value:function y(){return this.yi}}]);return ALDrawnPoint}();var gmodifs=[];var lastUpdate=new Date;var drawingContext=undefined;var ALUIFeedbackStyle=Object.freeze({"ALUIFeedbackStyleRect":0,"ALUIFeedbackStyleContourRect":1,"ALUIFeedbackStyleContourUnderline":2,"ALUIFeedbackStyleContourPoint":3,"ALUIFeedbackStyleNone":4});var ALUIVisualFeedbackAnimation=Object.freeze({"ALUIVisualFeedbackAnimationTraverseSingle":0,"ALUIVisualFeedbackAnimationTraverseMulti":1,"ALUIVisualFeedbackAnimationKitt":2,"ALUIVisualFeedbackAnimationBlink":3,"ALUIVisualFeedbackAnimationResize":4,"ALUIVisualFeedbackAnimationPulse":5,"ALUIVisualFeedbackAnimationPulseRandom":6,"ALUIVisualFeedbackAnimationNone":7});function drawOverlayIntern(config,inSquares,modifier){var clear=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;if(typeof config=="undefined"){return}var lsquares=inSquares.squares;var textRect=inSquares.textRect;var lpoints=inSquares.points;var now=new Date;var lastToNow=now-lastUpdate;if(clear){clearContext()}if(fromAppDebug){var can=document.getElementById("myCanvas");var ctx=can.getContext("2d");ctx.strokeStyle="#FF0000";ctx.strokeRect(1,1,can.width-2,can.height-2)}if(lsquares!=null&&lsquares!="undefined"){applyModifiers(config,modifier,lsquares,lpoints)}switch(config.feedbackStyle){case ALUIFeedbackStyle.ALUIFeedbackStyleRect:roundedPath(config,lpoints);break;case ALUIFeedbackStyle.ALUIFeedbackStyleContourRect:drawContourRectOverlay(config,lsquares);break;case ALUIFeedbackStyle.ALUIFeedbackStyleContourUnderline:drawContourUnderlineOverlay(config,lsquares);break;case ALUIFeedbackStyle.ALUIFeedbackStyleContourPoint:drawContourPointOverlay(config,lsquares);break;case ALUIFeedbackStyle.ALUIFeedbackStyleNone:break;}lastUpdate=new Date}function initArray(size,val){var array=[];while(size--){array.push(val)}return array}function applyModifiers(config,inModifier,lsquares,lpoints){if(typeof inModifier=="undefined"){return}var size;if(lsquares!=null&&lsquares!="undefined"){size=lsquares.length}else if(lpoints!=null&&lpoints!="undefined"){size=lpoints.length}var alphaModifier=initArray(size,1);var sizeModifierX=initArray(size,1);var sizeModifierY=initArray(size,1);switch(config.visualFeedbackAnimation){case ALUIVisualFeedbackAnimation.ALUIVisualFeedbackAnimationTraverseSingle:alphaModifier=mod_traverseSingle(size,inModifier);break;case ALUIVisualFeedbackAnimation.ALUIVisualFeedbackAnimationTraverseMulti:alphaModifier=mod_sinus(size,inModifier);break;case ALUIVisualFeedbackAnimation.ALUIVisualFeedbackAnimationKitt:alphaModifier=mod_traverseKitt(size,inModifier);break;case ALUIVisualFeedbackAnimation.ALUIVisualFeedbackAnimationBlink:alphaModifier=mod_blink(size,inModifier);break;case ALUIVisualFeedbackAnimation.ALUIVisualFeedbackAnimationPulse:alphaModifier=mod_pulse(size,inModifier);break;case ALUIVisualFeedbackAnimation.ALUIVisualFeedbackAnimationResize:sizeModifierY=mod_sinus(size,inModifier);alphaModifier=mod_sinus(size,inModifier);var sizeModifierY=sizeModifierY.map(function(element){return(element+1)*1.5});alphaModifier=alphaModifier.map(function(element){return element*2.2});break;case ALUIVisualFeedbackAnimation.ALUIVisualFeedbackAnimationPulseRandom:alphaModifier=mod_random(size,inModifier);sizeModifierY=alphaModifier;break;default:return;break;}inModifier.alphaModifier=alphaModifier;inModifier.sizeModifierX=sizeModifierX;inModifier.sizeModifierY=sizeModifierY;if(lsquares!=null&&lsquares!="undefined"){for(var e in lsquares){var elmnt=lsquares[e];elmnt.strokeColor.alpha=inModifier.alphaModifier[e];elmnt.scalex=inModifier.sizeModifierX[e];elmnt.scaley=inModifier.sizeModifierY[e]}}else if(lpoints!=null&&lpoints!="undefined"){for(var e in lpoints){var elmnt=lpoints[e];elmnt.strokeColor.alpha=inModifier.alphaModifier[e];elmnt.scalex=inModifier.sizeModifierX[e];elmnt.scaley=inModifier.sizeModifierY[e]}}}function mod_traverseKitt(n,inModifier){var modifier=[];for(var i=0;i<n;i++){modifier[i]=0}if(inModifier.dir==1){modifier[0]=0.5;modifier[1]=1}else{modifier[n-1]=1;modifier[n]=0.5}modifier=modifier.concat(modifier.splice(0,n-inModifier.index));inModifier.index=inModifier.index+inModifier.dir;if(inModifier.index==n-1){inModifier.dir=-1}if(inModifier.index==0){inModifier.dir=1}return modifier}function mod_blink(n,inModifier){var modifier=[];for(var i=0;i<n;i++){modifier[i]=inModifier.index/(n+1)}inModifier.index=inModifier.index+inModifier.dir;if(inModifier.index==0){inModifier.dir=1}if(inModifier.index==n){inModifier.dir=-1}return modifier}function mod_pulse(n,inModifier){var modifier=[];for(var i=0;i<n;i++){if(inModifier.index%6===0){modifier[i]=1}else{modifier[i]=0}}inModifier.index=inModifier.index+inModifier.dir;return modifier}function mod_random(n,inModifier){var modifier=[];for(var i=0;i<n;i++){modifier[i]=Math.random()}inModifier.index=inModifier.index+inModifier.dir;if(inModifier.index>=n){inModifier.index=0}return modifier}function mod_resize(n,inModifier){var modifier=[];var step=32/n;var idx=0;for(var i=16;i<48;i=i+step){var x=Math.abs(Math.sin(i/10));modifier[idx]=1-x;idx=idx+1}modifier=modifier.concat(modifier.splice(0,n-inModifier.index));inModifier.index=inModifier.index+1;if(inModifier.index>=n){inModifier.index=0}return modifier}function mod_sinus(n,inModifier){var modifier=[];var step=32/n;var idx=0;for(var i=16;i<48;i=i+step){var x=Math.abs(Math.sin(i/10));modifier[idx]=1-x;idx=idx+1}modifier=modifier.concat(modifier.splice(0,n-inModifier.index));inModifier.index=inModifier.index+1;if(inModifier.index>=n){inModifier.index=0}return modifier}function mod_traverseSingle(n,inModifier){var modifier=[];for(var i=0;i<n;i++){modifier[i]=0}modifier[0]=1;modifier=modifier.concat(modifier.splice(0,n-inModifier.index));inModifier.index=inModifier.index+1;if(inModifier.index>=n){inModifier.index=0}return modifier}function drawRectOverlay(config,points){if(typeof points=="undefined"){return}var sq=points;for(var i=0;i<points.length;i++){var sq=points[i];// drawPolygon(config, sq.x(), sq.y());
}}function drawContourRectOverlay(config,lsquares){if(typeof lsquares=="undefined"){return}for(var i=0;i<lsquares.length;i++){var sq=lsquares[i];roundRect(config,sq.x(),sq.y(),sq.w(),sq.h())}}function roundedPath(config,points){var context=drawingContext;var radius=config.visualFeedbackCornerRadius;if(typeof points=="undefined"){return}context.beginPath();//compute the middle of the first line as start-stop-point:
var deltaY=points[1].y()-points[0].y();var deltaX=points[1].x()-points[0].x();var xPerY=deltaY/deltaX;var startX=points[0].x()+deltaX/2;var startY=points[0].y()+xPerY*deltaX/2;//walk around using arcTo:
context.moveTo(startX,startY);var x1,y1,x2,y2;x2=points[1].x();y2=points[1].y();for(var i=2;i<points.length;i++){x1=x2;y1=y2;x2=points[i].x();y2=points[i].y();context.arcTo(x1,y1,x2,y2,radius)}//finally, close the path:
context.lineWidth=Math.floor(config.visualFeedbackStrokeWidth);context.arcTo(x2,y2,points[0].x(),points[0].y(),radius);context.arcTo(points[0].x(),points[0].y(),startX,startY,radius);context.closePath();context.fillStyle=getColorFromHexString(config.visualFeedbackFillColor);context.fill();context.strokeStyle=getColorFromHexString(config.visualFeedbackStrokeColor);context.stroke()}function drawPolygon(config,points){var context=drawingContext;var radius=config.visualFeedbackCornerRadius;if(typeof points=="undefined"){return}if(typeof radius==="number"){radius={tl:radius,tr:radius,br:radius,bl:radius}}else{var defaultRadius={tl:0,tr:0,br:0,bl:0};for(var side in defaultRadius){radius[side]=radius[side]||defaultRadius[side]}}context.beginPath();context.lineWidth=Math.floor(config.visualFeedbackStrokeWidth);context.moveTo(points[0].x(),points[0].y());//
//    context.moveTo(points[0].x() + radius.tl, points[0].y());
//    context.lineTo(points[0].x() - radius.tr, points[0].y());
//    context.quadraticCurveTo(points[0].x(), points[0].y(), points[0].x(), points[0].y() + radius.tr);
//    context.lineTo(points[1].x(), points[1].y() - radius.br);
//    context.quadraticCurveTo(points[1].x(), points[1].y(), points[1].x() - radius.br, points[1].y());
//    context.lineTo(points[2].x() + radius.bl, points[2].y());
//    context.quadraticCurveTo(points[2].x(), points[2].y(), points[2].x(), points[2].y() - radius.bl);
//    context.lineTo(points[3].x(), points[3].y() + radius.tl);
//    context.quadraticCurveTo(points[3].x(), points[3].y(), points[3].x() + radius.tl, points[3].y());
for(var i=1;i<points.length;i++){var sq=points[i];context.lineTo(sq.x(),sq.y());//context.quadraticCurveTo(sq.x(), sq.y(), sq.x() + radius.tl, sq.y());
}context.closePath();context.fillStyle=getColorFromHexString(config.visualFeedbackFillColor);context.fill();context.strokeStyle=getColorFromHexString(config.visualFeedbackStrokeColor);context.stroke()}function drawContourPointOverlay(config,lsquares){if(typeof lsquares=="undefined"){return}for(var i=0;i<lsquares.length;i++){var sq=lsquares[i];var radius=Math.floor(config.visualFeedbackStrokeWidth);radius=radius*sq.scaley;var color=sq.strokeColor;drawCircle(config,sq.x()+sq.w()/2,sq.y()+sq.h()+radius,radius,color.getColor())}}function drawContourUnderlineOverlay(config,lsquares){if(typeof lsquares=="undefined"){return}for(var i=0;i<lsquares.length;i++){var sq=lsquares[i];var stroke=Math.floor(config.visualFeedbackStrokeWidth);stroke=stroke*sq.scaley;var color=sq.strokeColor;drawLine(config,sq.x(),sq.y()+sq.h()+stroke,sq.x()+sq.w(),sq.y()+sq.h()+stroke,stroke,color.getColor())}}function drawLine(config,x1,y1,x2,y2,stroke,color){var context=drawingContext;context.strokeStyle=color;context.beginPath();context.moveTo(x1,y1);context.lineTo(x2,y2);context.lineWidth=stroke;context.stroke()}function clearContext(){if(typeof drawingContext=="undefined"){return}var context=drawingContext;var can=document.getElementById("myCanvas");context.clearRect(0,0,can.width,can.height)}function drawCircle(config,x,y,radius,color){var context=drawingContext;context.beginPath();context.arc(x,y,radius,0,2*Math.PI,false);context.fillStyle=color;context.fill()}function resizeCanvas(x,y){var visualFeedbackCan=document.getElementById("myCanvas");visualFeedbackCan.width=x;visualFeedbackCan.height=y}function roundRect(config,x,y,width,height){var context=drawingContext;var radius=config.visualFeedbackCornerRadius;if(typeof radius==="number"){radius={tl:radius,tr:radius,br:radius,bl:radius}}else{var defaultRadius={tl:0,tr:0,br:0,bl:0};for(var side in defaultRadius){radius[side]=radius[side]||defaultRadius[side]}}context.beginPath();context.lineWidth=Math.floor(config.visualFeedbackStrokeWidth);context.moveTo(x+radius.tl,y);context.lineTo(x+width-radius.tr,y);context.quadraticCurveTo(x+width,y,x+width,y+radius.tr);context.lineTo(x+width,y+height-radius.br);context.quadraticCurveTo(x+width,y+height,x+width-radius.br,y+height);context.lineTo(x+radius.bl,y+height);context.quadraticCurveTo(x,y+height,x,y+height-radius.bl);context.lineTo(x,y+radius.tl);context.quadraticCurveTo(x,y,x+radius.tl,y);context.closePath();context.fillStyle=getColorFromHexString(config.visualFeedbackFillColor);context.fill();context.strokeStyle=getColorFromHexString(config.visualFeedbackStrokeColor);context.stroke()}function drawOverlayWithConfig(config,offset,modif){var squares=[];for(var i=0;i<10;i++){var de=new ALDrawnElement(50+i*40,50+offset,30,30,config.visualFeedbackStrokeColor,config.visualFeedbackFillColor);squares.push(de)}var points=[[635.40466,895.5203],[659.7297,895.5203],[659.7297,936.5687],[635.40466,936.5687]];drawOverlayIntern(config,new ALSquareInput([10,10,300,30],[10,10,300,30],points),modif,false)}function updateFramesTest(){clearContext();drawOverlayWithConfig({"visualFeedbackCornerRadius":10,"visualFeedbackStrokeColor":"#ff0000ff","visualFeedbackFillColor":"#0000ffff","visualFeedbackStrokeWidth":3,"feedbackStyle":0,"visualFeedbackAnimation":0},50,gmodifs[0]);drawOverlayWithConfig({"visualFeedbackCornerRadius":10,"visualFeedbackStrokeColor":"#ff0000ff","visualFeedbackFillColor":"#0000ffff","visualFeedbackStrokeWidth":3,"feedbackStyle":2,"visualFeedbackAnimation":1},100,gmodifs[1]);drawOverlayWithConfig({"visualFeedbackCornerRadius":10,"visualFeedbackStrokeColor":"#ff0000ff","visualFeedbackFillColor":"#0000ffff","visualFeedbackStrokeWidth":3,"feedbackStyle":3,"visualFeedbackAnimation":2},150,gmodifs[2]);drawOverlayWithConfig({"visualFeedbackCornerRadius":10,"visualFeedbackStrokeColor":"#ff0000ff","visualFeedbackFillColor":"#0000ffff","visualFeedbackStrokeWidth":3,"feedbackStyle":3,"visualFeedbackAnimation":3},200,gmodifs[3]);drawOverlayWithConfig({"visualFeedbackCornerRadius":10,"visualFeedbackStrokeColor":"#ff0000ff","visualFeedbackFillColor":"#0000ffff","visualFeedbackStrokeWidth":3,"feedbackStyle":3,"visualFeedbackAnimation":5},250,gmodifs[4]);drawOverlayWithConfig({"visualFeedbackCornerRadius":10,"visualFeedbackStrokeColor":"#ff0000ff","visualFeedbackFillColor":"#0000ffff","visualFeedbackStrokeWidth":3,"feedbackStyle":3,"visualFeedbackAnimation":4},300,gmodifs[5])}function updateFrames(){al_drawOverlay()}function testAppSetup(){al_loadConfig({"visualFeedbackStrokeWidth":2,"visualFeedbackRedrawTimeout":0,"visualFeedbackStrokeColor":"#0099FF","visualFeedbackAnimation":7,"feedbackStyle":1,"visualFeedbackAnimationDuration":75,"visualFeedbackFillColor":"null","visualFeedbackCornerRadius":4});//al_polygon([[635.40466,895.5203],[659.7297,895.5203],[659.7297,936.5687],[635.40466,936.5687]]);
al_loadSquares([[120.09876543209873,148.1358024691358,10.27160493827165,8.296296296296276],[65.97530864197529,139.83950617283952,14.61728395061732,16.59259259259258],[224,133.12345679012344,9.481481481481495,7.506172839506206],[149.33333333333334,133.12345679012344,8.296296296296276,7.506172839506206],[173.43209876543207,129.5679012345679,11.061728395061749,6.320987654320987],[124.44444444444443,124.82716049382714,11.06172839506172,5.925925925925924],[71.90123456790121,120.4814814814815,13.037037037037038,5.925925925925924],[150.12345679012344,116.1358024691358,9.481481481481495,6.320987654320959],[97.97530864197529,114.16049382716048,9.876543209876559,20.148148148148124],[54.12345679012344,114.16049382716051,5.135802469135854,15.802469135802454],[125.23456790123453,113.37037037037035,11.061728395061778,4.740740740740762],[73.08641975308643,108.23456790123458,13.432098765432102,4.740740740740733]])}// ***** PUBLIC API
var fromAppDebug=false;var fromAppRunning=true;var fromAppConfig=undefined;var fromAppSquares=undefined;var fromAppTextRect=undefined;var fromAppPoints=undefined;var globalModifier=new ALModifier;function al_drawOverlay(){if(fromAppRunning==false){clearContext();return}drawOverlayIntern(fromAppConfig,new ALSquareInput(fromAppSquares,fromAppTextRect,fromAppPoints),globalModifier,true)}function al_cancelFeedback(){fromAppRunning=false}function al_loadSquares(squares){var sqarr=[];for(var i in squares){var sq=squares[i];var de=new ALDrawnElement(sq[0],sq[1],sq[2],sq[3],fromAppConfig.visualFeedbackStrokeColor,fromAppConfig.visualFeedbackFillColor);sqarr.push(de)}fromAppSquares=sqarr}function al_polygon(points){var pnt=[];for(var i in points){var sq=points[i];var de=new ALDrawnPoint(sq[0],sq[1],fromAppConfig.visualFeedbackStrokeColor,fromAppConfig.visualFeedbackFillColor);pnt.push(de)}fromAppPoints=pnt}function al_loadTextRect(textRect){var a=[];var de=new ALDrawnElement(textRect[0],textRect[1],textRect[2],textRect[3],fromAppConfig.visualFeedbackStrokeColor,fromAppConfig.visualFeedbackFillColor);a.push(de);fromAppTextRect=a}function al_loadConfig(config){fromAppConfig=config}function al_debugView(debug){fromAppDebug=debug}function al_resizeCanvas(x,y){resizeCanvas(x,y)}var clearVF=function clearVF(){fromAppSquares=undefined;fromAppTextRect=undefined;fromAppPoints=undefined;clearContext()};
