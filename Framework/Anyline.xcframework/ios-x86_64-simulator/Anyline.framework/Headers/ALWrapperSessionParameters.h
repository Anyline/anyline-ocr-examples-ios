// To parse this JSON:
//
//   NSError *error;
//   ALWrapperSessionParameters *wrapperSessionParameters = [ALWrapperSessionParameters fromJSON:json encoding:NSUTF8Encoding error:&error];

#import <Foundation/Foundation.h>

@class ALExportedScanResult;
@class ALExportedScanResultImageContainer;
@class ALExportedScanResultImageParameters;
@class ALFailInfoClass;
@class ALFillType;
@class ALPositionXAlignment;
@class ALPositionYAlignment;
@class ALScanViewInitializationParameters;
@class ALSucceedInfoClass;
@class ALViewPluginType;
@class ALWrapperSessionExportCachedEventsResponse;
@class ALWrapperSessionExportCachedEventsResponseFail;
@class ALWrapperSessionExportCachedEventsResponseStatus;
@class ALWrapperSessionExportCachedEventsResponseSucceed;
@class ALWrapperSessionParameters;
@class ALWrapperSessionResponseStatus;
@class ALWrapperSessionScanResponse;
@class ALWrapperSessionScanResponseAbort;
@class ALWrapperSessionScanResponseFail;
@class ALWrapperSessionScanResponseStatus;
@class ALWrapperSessionScanResponseSucceed;
@class ALWrapperSessionScanResultCallbackConfig;
@class ALWrapperSessionScanResultCleanStrategyConfig;
@class ALWrapperSessionScanResultConfig;
@class ALWrapperSessionScanResultExtraInfo;
@class ALWrapperSessionScanResultsResponse;
@class ALWrapperSessionScanStartRequest;
@class ALWrapperSessionScanStopRequest;
@class ALWrapperSessionScanViewConfigOptionDefaultOrientation;
@class ALWrapperSessionScanViewConfigOptionDoneButton;
@class ALWrapperSessionScanViewConfigOptionElementAlignment;
@class ALWrapperSessionScanViewConfigOptionElementOffset;
@class ALWrapperSessionScanViewConfigOptionLabel;
@class ALWrapperSessionScanViewConfigOptionRotateButton;
@class ALWrapperSessionScanViewConfigOptions;
@class ALWrapperSessionScanViewConfigOptionSegmentConfig;
@class ALWrapperSessionSDKInitializationCacheConfig;
@class ALWrapperSessionSDKInitializationRequest;
@class ALWrapperSessionSDKInitializationResponse;
@class ALWrapperSessionSDKInitializationResponseInitialized;
@class ALWrapperSessionSDKInitializationResponseNotInitialized;
@class ALWrapperSessionUCRReportRequest;
@class ALWrapperSessionUCRReportResponse;
@class ALWrapperSessionUCRReportResponseFail;
@class ALWrapperSessionUCRReportResponseStatus;
@class ALWrapperSessionUCRReportResponseSucceed;

NS_ASSUME_NONNULL_BEGIN


#pragma mark - Boxed enums

/// Initial screen orientation when scanning starts.
@interface ALWrapperSessionScanViewConfigOptionDefaultOrientation : NSObject
@property (nonatomic, readonly, copy) NSString *value;
+ (instancetype _Nullable)withValue:(NSString *)value;
+ (ALWrapperSessionScanViewConfigOptionDefaultOrientation *)landscape;
+ (ALWrapperSessionScanViewConfigOptionDefaultOrientation *)portrait;
@end

/// The preset used for width fill.
@interface ALFillType : NSObject
@property (nonatomic, readonly, copy) NSString *value;
+ (instancetype _Nullable)withValue:(NSString *)value;
+ (ALFillType *)fullwidth;
+ (ALFillType *)rect;
@end

/// The preset locations for the button along the x-axis.
@interface ALPositionXAlignment : NSObject
@property (nonatomic, readonly, copy) NSString *value;
+ (instancetype _Nullable)withValue:(NSString *)value;
+ (ALPositionXAlignment *)center;
+ (ALPositionXAlignment *)left;
+ (ALPositionXAlignment *)right;
@end

/// The preset locations for the button along the y-axis.
@interface ALPositionYAlignment : NSObject
@property (nonatomic, readonly, copy) NSString *value;
+ (instancetype _Nullable)withValue:(NSString *)value;
+ (ALPositionYAlignment *)bottom;
+ (ALPositionYAlignment *)center;
+ (ALPositionYAlignment *)top;
@end

/// Status of the cached events exporting process.
@interface ALWrapperSessionExportCachedEventsResponseStatus : NSObject
@property (nonatomic, readonly, copy) NSString *value;
+ (instancetype _Nullable)withValue:(NSString *)value;
+ (ALWrapperSessionExportCachedEventsResponseStatus *)exportFailed;
+ (ALWrapperSessionExportCachedEventsResponseStatus *)exportSucceeded;
@end

/// Screen corner where the UI element will be positioned. Element will align to the
/// specified corner before applying any offset.
@interface ALWrapperSessionScanViewConfigOptionElementAlignment : NSObject
@property (nonatomic, readonly, copy) NSString *value;
+ (instancetype _Nullable)withValue:(NSString *)value;
+ (ALWrapperSessionScanViewConfigOptionElementAlignment *)bottomLeft;
+ (ALWrapperSessionScanViewConfigOptionElementAlignment *)bottomRight;
+ (ALWrapperSessionScanViewConfigOptionElementAlignment *)topLeft;
+ (ALWrapperSessionScanViewConfigOptionElementAlignment *)topRight;
@end

/// Whether and how the files generated by ScanResults should be removed.
@interface ALWrapperSessionScanResultCleanStrategyConfig : NSObject
@property (nonatomic, readonly, copy) NSString *value;
+ (instancetype _Nullable)withValue:(NSString *)value;
+ (ALWrapperSessionScanResultCleanStrategyConfig *)cleanFolderOnStartScanning;
+ (ALWrapperSessionScanResultCleanStrategyConfig *)deleteResultFilesOnFinishScanning;
+ (ALWrapperSessionScanResultCleanStrategyConfig *)keepResultFiles;
@end

/// Status of the scanning process.
@interface ALWrapperSessionScanResponseStatus : NSObject
@property (nonatomic, readonly, copy) NSString *value;
+ (instancetype _Nullable)withValue:(NSString *)value;
+ (ALWrapperSessionScanResponseStatus *)scanAborted;
+ (ALWrapperSessionScanResponseStatus *)scanFailed;
+ (ALWrapperSessionScanResponseStatus *)scanSucceeded;
@end

/// The type of the source ViewPlugin that generated result(s).
@interface ALViewPluginType : NSObject
@property (nonatomic, readonly, copy) NSString *value;
+ (instancetype _Nullable)withValue:(NSString *)value;
+ (ALViewPluginType *)viewPlugin;
+ (ALViewPluginType *)viewPluginComposite;
@end

/// Status of the scanning process.
///
/// Status of the UCR reporting process.
///
/// Status of the cached events exporting process.
@interface ALWrapperSessionResponseStatus : NSObject
@property (nonatomic, readonly, copy) NSString *value;
+ (instancetype _Nullable)withValue:(NSString *)value;
+ (ALWrapperSessionResponseStatus *)exportFailed;
+ (ALWrapperSessionResponseStatus *)exportSucceeded;
+ (ALWrapperSessionResponseStatus *)scanAborted;
+ (ALWrapperSessionResponseStatus *)scanFailed;
+ (ALWrapperSessionResponseStatus *)scanSucceeded;
+ (ALWrapperSessionResponseStatus *)ucrReportFailed;
+ (ALWrapperSessionResponseStatus *)ucrReportSucceeded;
@end

/// Status of the UCR reporting process.
@interface ALWrapperSessionUCRReportResponseStatus : NSObject
@property (nonatomic, readonly, copy) NSString *value;
+ (instancetype _Nullable)withValue:(NSString *)value;
+ (ALWrapperSessionUCRReportResponseStatus *)ucrReportFailed;
+ (ALWrapperSessionUCRReportResponseStatus *)ucrReportSucceeded;
@end

#pragma mark - Object interfaces

/// Schema for Wrapper Session Parameters
///
/// General information to be used for SDK initialization.
///
/// Response containing SDK initialization result. Must include either failInfo (if
/// initialization failed) or succeedInfo (if successful). The 'initialized' boolean
/// indicates the overall status.
///
/// Request to start a scanning session. Requires both scanViewConfigContentString (defining
/// what to scan) and scanResultConfig (defining how to handle results). Optional
/// scanViewInitializationParameters for workflow correlation.
///
/// Request to stop the current scanning session with optional message explaining the reason
/// for termination.
///
/// Information about the results collected during the scanning process.
///
/// Response indicating scan session completion status. Includes exactly one info object
/// (failInfo, abortInfo, or succeedInfo) corresponding to the status field value.
///
/// Information to be used for scanning session.
///
/// Information to be used to report UCR.
///
/// Response from UCR (User Corrected Result) reporting. Must include either failInfo (if
/// reporting failed) or succeedInfo (if successful), corresponding to the status field.
///
/// Response from cached events export operation. Includes either failInfo (if export failed)
/// or succeedInfo (if successful), corresponding to the status field.
@interface ALWrapperSessionParameters : NSObject
@property (nonatomic, nullable, strong) ALWrapperSessionExportCachedEventsResponse *exportCachedEventsResponse;
@property (nonatomic, nullable, strong) ALWrapperSessionScanResponse *scanResponse;
@property (nonatomic, nullable, strong) ALWrapperSessionScanResultsResponse *scanResultsResponse;
@property (nonatomic, nullable, strong) ALWrapperSessionScanStartRequest *scanStartRequest;
@property (nonatomic, nullable, strong) ALWrapperSessionScanStopRequest *scanStopRequest;
@property (nonatomic, nullable, strong) ALWrapperSessionScanViewConfigOptions *scanViewConfigOptions;
@property (nonatomic, nullable, strong) ALWrapperSessionSDKInitializationRequest *sdkInitializationRequest;
@property (nonatomic, nullable, strong) ALWrapperSessionSDKInitializationResponse *sdkInitializationResponse;
@property (nonatomic, nullable, strong) ALWrapperSessionUCRReportRequest *ucrReportRequest;
@property (nonatomic, nullable, strong) ALWrapperSessionUCRReportResponse *ucrReportResponse;
/// The path to be used as root folder by the SDK while requesting asset files. Leave empty
/// to use default asset location.
@property (nonatomic, nullable, copy)   NSString *assetPathPrefix;
@property (nonatomic, nullable, strong) ALWrapperSessionSDKInitializationCacheConfig *cacheConfig;
/// Anyline license key to be used for SDK initialization.
@property (nonatomic, nullable, copy)   NSString *licenseKey;
@property (nonatomic, nullable, strong) ALFailInfoClass *failInfo;
/// True if SDK initialization succeeded and scanning is available, false if initialization
/// failed.
@property (nonatomic, nullable, strong) NSNumber *initialized;
@property (nonatomic, nullable, strong) ALSucceedInfoClass *succeedInfo;
@property (nonatomic, nullable, strong) ALWrapperSessionScanResultConfig *scanResultConfig;
/// The ScanViewConfig to be used for the scanner. As defined in sdk_config.schema.json
@property (nonatomic, nullable, copy) NSString *scanViewConfigContentString;
/// The path (relative from assets folder) to load ScanViewConfig json files while using a
/// SegmentControl.
@property (nonatomic, nullable, copy) NSString *scanViewConfigPath;
/// See ALScanViewInitializationParameters.h
@property (nonatomic, nullable, copy) NSDictionary<NSString *, id> *scanViewInitializationParameters;
/// The stop message.
@property (nonatomic, nullable, copy)   NSString *message;
@property (nonatomic, nullable, copy)   NSArray<NSDictionary<NSString *, id> *> *exportedScanResults;
@property (nonatomic, nullable, strong) ALWrapperSessionScanResultExtraInfo *scanResultExtraInfo;
@property (nonatomic, nullable, strong) ALWrapperSessionScanResponseAbort *abortInfo;
@property (nonatomic, nullable, assign) ALWrapperSessionResponseStatus *status;
@property (nonatomic, nullable, assign) ALWrapperSessionScanViewConfigOptionDefaultOrientation *defaultOrientation;
@property (nonatomic, nullable, strong) ALWrapperSessionScanViewConfigOptionDoneButton *doneButtonConfig;
@property (nonatomic, nullable, strong) ALWrapperSessionScanViewConfigOptionLabel *label;
@property (nonatomic, nullable, strong) ALWrapperSessionScanViewConfigOptionRotateButton *rotateButton;
@property (nonatomic, nullable, strong) ALWrapperSessionScanViewConfigOptionSegmentConfig *segmentConfig;
/// The title to be shown on the toolbar for the scanner window.
@property (nonatomic, nullable, copy) NSString *toolbarTitle;
/// The blobKey provided from a PluginResult.
@property (nonatomic, nullable, copy) NSString *blobKey;
/// The corrected result to be reported.
@property (nonatomic, nullable, copy) NSString *correctedResult;

+ (_Nullable instancetype)fromJSON:(NSString *)json encoding:(NSStringEncoding)encoding error:(NSError *_Nullable *)error;
+ (_Nullable instancetype)fromData:(NSData *)data error:(NSError *_Nullable *)error;
- (NSString *_Nullable)toJSON:(NSStringEncoding)encoding error:(NSError *_Nullable *)error;
- (NSData *_Nullable)toData:(NSError *_Nullable *)error;
@end

@interface ALWrapperSessionScanResponseAbort : NSObject
/// The abort message.
@property (nonatomic, nullable, copy) NSString *message;
@end

/// Cache configuration to be applied on SDK initialization.
@interface ALWrapperSessionSDKInitializationCacheConfig : NSObject
/// Whether or not specific caching is enabled for offline licenses.
@property (nonatomic, nullable, strong) NSNumber *offlineLicenseCachingEnabled;
@end

/// A button that dismisses the scan view screen when pressed.
@interface ALWrapperSessionScanViewConfigOptionDoneButton : NSObject
/// A color, denoted by a hex string of the button background. The default is empty (clear
/// color).
@property (nonatomic, nullable, copy) NSString *backgroundColor;
/// A Float value indicating the corner rounding of the Done button.
@property (nonatomic, nullable, strong) NSNumber *cornerRadius;
/// The preset used for width fill.
@property (nonatomic, nullable, assign) ALFillType *fillType;
/// The name of the font (note: the font must be available for the device).
@property (nonatomic, nullable, copy) NSString *fontName;
/// Button title font size in points (typically 8-72).
@property (nonatomic, nullable, strong) NSNumber *fontSize;
@property (nonatomic, nullable, strong) NSNumber *offsetX;
@property (nonatomic, nullable, strong) NSNumber *offsetY;
/// The preset locations for the button along the x-axis.
@property (nonatomic, nullable, assign) ALPositionXAlignment *positionXAlignment;
/// The preset locations for the button along the y-axis.
@property (nonatomic, nullable, assign) ALPositionYAlignment *positionYAlignment;
/// A color, denoted by a hex string of the button title.
@property (nonatomic, nullable, copy) NSString *textColor;
/// A color, denoted by a hex string used by the button title when pressed.
@property (nonatomic, nullable, copy) NSString *textColorHighlighted;
/// The text displayed for the button.
@property (nonatomic, nullable, copy) NSString *title;
@end

/// Response from cached events export operation. Includes either failInfo (if export failed)
/// or succeedInfo (if successful), corresponding to the status field.
@interface ALWrapperSessionExportCachedEventsResponse : NSObject
@property (nonatomic, nullable, strong) ALWrapperSessionExportCachedEventsResponseFail *failInfo;
@property (nonatomic, nullable, assign) ALWrapperSessionExportCachedEventsResponseStatus *status;
@property (nonatomic, nullable, strong) ALWrapperSessionExportCachedEventsResponseSucceed *succeedInfo;
@end

@interface ALWrapperSessionExportCachedEventsResponseFail : NSObject
/// The last error received while exporting cached events.
@property (nonatomic, nullable, copy) NSString *lastError;
@end

@interface ALWrapperSessionExportCachedEventsResponseSucceed : NSObject
/// The generated file containing exported cached events.
@property (nonatomic, nullable, copy) NSString *exportedFile;
@end

@interface ALFailInfoClass : NSObject
/// The last error received while trying to initialize the SDK.
///
/// The last error received while trying to scan.
///
/// The last error received while reporting UCR.
///
/// The last error received while exporting cached events.
@property (nonatomic, nullable, copy) NSString *lastError;
/// The error code received while connecting to server.
@property (nonatomic, nullable, strong) NSNumber *responseErrorCode;
/// The error message received while connecting to server.
@property (nonatomic, nullable, copy) NSString *responseErrorMessage;
@end

/// A static text label can be added to the scan view.
@interface ALWrapperSessionScanViewConfigOptionLabel : NSObject
/// A color, denoted by a hex string, the label is to be displayed in.
@property (nonatomic, nullable, copy)   NSString *color;
@property (nonatomic, nullable, strong) NSNumber *offsetX;
@property (nonatomic, nullable, strong) NSNumber *offsetY;
/// The font size of the label.
@property (nonatomic, nullable, strong) NSNumber *size;
/// The text to display.
@property (nonatomic, nullable, copy) NSString *text;
@end

/// Button that toggles between portrait and landscape orientations when tapped. Positioned
/// according to alignment and (optional) offset settings.
@interface ALWrapperSessionScanViewConfigOptionRotateButton : NSObject
@property (nonatomic, assign)           ALWrapperSessionScanViewConfigOptionElementAlignment *alignment;
@property (nonatomic, nullable, strong) ALWrapperSessionScanViewConfigOptionElementOffset *offset;
@end

/// Optional pixel offset from the element's aligned position. Use positive/negative values
/// to fine-tune positioning.
@interface ALWrapperSessionScanViewConfigOptionElementOffset : NSObject
@property (nonatomic, nullable, strong) NSNumber *x;
@property (nonatomic, nullable, strong) NSNumber *y;
@end

/// Response indicating scan session completion status. Includes exactly one info object
/// (failInfo, abortInfo, or succeedInfo) corresponding to the status field value.
@interface ALWrapperSessionScanResponse : NSObject
@property (nonatomic, nullable, strong) ALWrapperSessionScanResponseAbort *abortInfo;
@property (nonatomic, nullable, strong) ALWrapperSessionScanResponseFail *failInfo;
@property (nonatomic, nullable, strong) ALWrapperSessionScanResultConfig *scanResultConfig;
@property (nonatomic, nullable, assign) ALWrapperSessionScanResponseStatus *status;
@property (nonatomic, nullable, strong) ALWrapperSessionScanResponseSucceed *succeedInfo;
@end

@interface ALWrapperSessionScanResponseFail : NSObject
/// The last error received while trying to scan.
@property (nonatomic, nullable, copy) NSString *lastError;
@end

/// Information to be used for returning and storing information during scanning session.
@interface ALWrapperSessionScanResultConfig : NSObject
@property (nonatomic, nullable, strong) ALWrapperSessionScanResultCallbackConfig *callbackConfig;
@property (nonatomic, nullable, assign) ALWrapperSessionScanResultCleanStrategyConfig *cleanStrategy;
/// See ALExportedScanResultImageContainer.h
@property (nonatomic, nullable, copy) NSDictionary<NSString *, id> *imageContainer;
/// See ALExportedScanResultImageParameters.h
@property (nonatomic, nullable, copy) NSDictionary<NSString *, id> *imageParameters;
@end

/// Configuration for callback method names that will be invoked during scanning events.
@interface ALWrapperSessionScanResultCallbackConfig : NSObject
/// Name of the callback method to invoke when scan results are available. Method will
/// receive a list of ExportedScanResult as parameter.
@property (nonatomic, nullable, copy) NSString *onResultEventName;
/// Name of the callback method to invoke when user taps a UI feedback element during
/// scanning. Method receives a UIFeedbackElementConfig as parameter.
@property (nonatomic, nullable, copy) NSString *onUIElementClickedEventName;
@end

@interface ALWrapperSessionScanResponseSucceed : NSObject
/// The info message.
@property (nonatomic, nullable, copy) NSString *message;
@end

/// Extra information returned by a scanning session.
@interface ALWrapperSessionScanResultExtraInfo : NSObject
/// The type of the source ViewPlugin that generated result(s).
@property (nonatomic, nullable, assign) ALViewPluginType *viewPluginType;
@end

/// Information about the results collected during the scanning process.
@interface ALWrapperSessionScanResultsResponse : NSObject
@property (nonatomic, nullable, copy)   NSArray<NSDictionary<NSString *, id> *> *exportedScanResults;
@property (nonatomic, nullable, strong) ALWrapperSessionScanResultConfig *scanResultConfig;
@property (nonatomic, nullable, strong) ALWrapperSessionScanResultExtraInfo *scanResultExtraInfo;
@end

/// Request to start a scanning session. Requires both scanViewConfigContentString (defining
/// what to scan) and scanResultConfig (defining how to handle results). Optional
/// scanViewInitializationParameters for workflow correlation.
@interface ALWrapperSessionScanStartRequest : NSObject
@property (nonatomic, strong) ALWrapperSessionScanResultConfig *scanResultConfig;
/// The ScanViewConfig to be used for the scanner. As defined in sdk_config.schema.json
@property (nonatomic, copy) NSString *scanViewConfigContentString;
/// The path (relative from assets folder) to load ScanViewConfig json files while using a
/// SegmentControl.
@property (nonatomic, nullable, copy) NSString *scanViewConfigPath;
/// See ALScanViewInitializationParameters.h
@property (nonatomic, nullable, copy) NSDictionary<NSString *, id> *scanViewInitializationParameters;
@end

/// Request to stop the current scanning session with optional message explaining the reason
/// for termination.
@interface ALWrapperSessionScanStopRequest : NSObject
/// The stop message.
@property (nonatomic, nullable, copy) NSString *message;
@end

/// Information to be used for scanning session.
@interface ALWrapperSessionScanViewConfigOptions : NSObject
@property (nonatomic, nullable, assign) ALWrapperSessionScanViewConfigOptionDefaultOrientation *defaultOrientation;
@property (nonatomic, nullable, strong) ALWrapperSessionScanViewConfigOptionDoneButton *doneButtonConfig;
@property (nonatomic, nullable, strong) ALWrapperSessionScanViewConfigOptionLabel *label;
@property (nonatomic, nullable, strong) ALWrapperSessionScanViewConfigOptionRotateButton *rotateButton;
@property (nonatomic, nullable, strong) ALWrapperSessionScanViewConfigOptionSegmentConfig *segmentConfig;
/// The title to be shown on the toolbar for the scanner window.
@property (nonatomic, nullable, copy) NSString *toolbarTitle;
@end

/// Multi-mode segment control allowing users to switch between different scanning
/// configurations (e.g., MRZ, Barcode, License Plate modes). Requires equal numbers of
/// titles and viewConfigs.
@interface ALWrapperSessionScanViewConfigOptionSegmentConfig : NSObject
@property (nonatomic, nullable, strong) NSNumber *offsetX;
@property (nonatomic, nullable, strong) NSNumber *offsetY;
/// Hex color code (e.g., 'FF0000' for red) applied to the selected segment and control
/// tinting.
@property (nonatomic, nullable, copy) NSString *tintColor;
/// Zero-based index indicating which segment should be initially selected. Must be within
/// the bounds of the titles array.
@property (nonatomic, nullable, strong) NSNumber *titleIndex;
/// Array of display names for each scanning mode shown to users in the segment control.
@property (nonatomic, nullable, copy) NSArray<NSString *> *titles;
/// Array of ScanView configuration filenames located in the assets folder. Each file defines
/// a complete scanning mode configuration.
@property (nonatomic, nullable, copy) NSArray<NSString *> *viewConfigs;
@end

/// General information to be used for SDK initialization.
@interface ALWrapperSessionSDKInitializationRequest : NSObject
/// The path to be used as root folder by the SDK while requesting asset files. Leave empty
/// to use default asset location.
@property (nonatomic, nullable, copy)   NSString *assetPathPrefix;
@property (nonatomic, nullable, strong) ALWrapperSessionSDKInitializationCacheConfig *cacheConfig;
/// Anyline license key to be used for SDK initialization.
@property (nonatomic, copy) NSString *licenseKey;
@end

/// Response containing SDK initialization result. Must include either failInfo (if
/// initialization failed) or succeedInfo (if successful). The 'initialized' boolean
/// indicates the overall status.
@interface ALWrapperSessionSDKInitializationResponse : NSObject
@property (nonatomic, nullable, strong) ALWrapperSessionSDKInitializationResponseNotInitialized *failInfo;
/// True if SDK initialization succeeded and scanning is available, false if initialization
/// failed.
@property (nonatomic, nullable, strong) NSNumber *initialized;
@property (nonatomic, nullable, strong) ALWrapperSessionSDKInitializationResponseInitialized *succeedInfo;
@end

@interface ALWrapperSessionSDKInitializationResponseNotInitialized : NSObject
/// The last error received while trying to initialize the SDK.
@property (nonatomic, nullable, copy) NSString *lastError;
@end

@interface ALWrapperSessionSDKInitializationResponseInitialized : NSObject
/// License expiry date in ISO 8601 format (YYYY-MM-DD).
@property (nonatomic, nullable, copy) NSString *expiryDate;
@end

@interface ALSucceedInfoClass : NSObject
/// License expiry date in ISO 8601 format (YYYY-MM-DD).
@property (nonatomic, nullable, copy) NSString *expiryDate;
/// The info message.
///
/// The message returned from the server.
@property (nonatomic, nullable, copy) NSString *message;
/// The generated file containing exported cached events.
@property (nonatomic, nullable, copy) NSString *exportedFile;
@end

/// Information to be used to report UCR.
@interface ALWrapperSessionUCRReportRequest : NSObject
/// The blobKey provided from a PluginResult.
@property (nonatomic, copy) NSString *blobKey;
/// The corrected result to be reported.
@property (nonatomic, copy) NSString *correctedResult;
@end

/// Response from UCR (User Corrected Result) reporting. Must include either failInfo (if
/// reporting failed) or succeedInfo (if successful), corresponding to the status field.
@interface ALWrapperSessionUCRReportResponse : NSObject
@property (nonatomic, nullable, strong) ALWrapperSessionUCRReportResponseFail *failInfo;
@property (nonatomic, nullable, assign) ALWrapperSessionUCRReportResponseStatus *status;
@property (nonatomic, nullable, strong) ALWrapperSessionUCRReportResponseSucceed *succeedInfo;
@end

@interface ALWrapperSessionUCRReportResponseFail : NSObject
/// The last error received while reporting UCR.
@property (nonatomic, nullable, copy) NSString *lastError;
/// The error code received while connecting to server.
@property (nonatomic, nullable, strong) NSNumber *responseErrorCode;
/// The error message received while connecting to server.
@property (nonatomic, nullable, copy) NSString *responseErrorMessage;
@end

@interface ALWrapperSessionUCRReportResponseSucceed : NSObject
/// The message returned from the server.
@property (nonatomic, nullable, copy) NSString *message;
@end

NS_ASSUME_NONNULL_END
